From 93de51648da9f74d00bb33f9ac61ac6c329fa6cf Mon Sep 17 00:00:00 2001
From: Bernd Waibel <waebbl@gmail.com>
Date: Sat, 30 Jan 2021 21:49:42 +0100
Subject: [PATCH] llvm-10 related patches

Signed-off-by: Bernd Waibel <waebbl@gmail.com>
---
 CMakeLists.txt   |  9 +++------
 src/llvmutil.cpp |  3 ++-
 src/opt.cpp      | 12 ++++++------
 3 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a4e4c0da..9d7cdcff 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -256,7 +256,7 @@ if (WASM_ENABLED)
     list(APPEND ISPC_TARGETS wasm-i32x4)
 endif()
 
-set(CLANG_LIBRARY_LIST clangFrontend clangDriver clangSerialization clangParse clangSema clangAnalysis clangAST clangBasic clangEdit clangLex)
+set(CLANG_LIBRARY_LIST clang clang-cpp)
 set(LLVM_COMPONENTS engine ipo bitreader bitwriter instrumentation linker option frontendopenmp)
 
 if (X86_ENABLED)
@@ -487,11 +487,8 @@ if (NOT WIN32 AND NOT APPLE)
 endif()
 
 # Link against Clang libraries
-foreach(clangLib ${CLANG_LIBRARY_LIST})
-    find_library(${clangLib}Path NAMES ${clangLib} HINTS ${LLVM_LIBRARY_DIRS})
-    list(APPEND CLANG_LIBRARY_FULL_PATH_LIST ${${clangLib}Path})
-endforeach()
-target_link_libraries(${PROJECT_NAME} ${CLANG_LIBRARY_FULL_PATH_LIST})
+find_package(Clang REQUIRED)
+target_link_libraries(${PROJECT_NAME} ${CLANG_LIBRARY_LIST})
 
 # Link against LLVM libraries
 target_link_libraries(${PROJECT_NAME} ${LLVM_LIBRARY_LIST} ${CMAKE_DL_LIBS})
diff --git a/src/llvmutil.cpp b/src/llvmutil.cpp
index d0becb9f..ac66872d 100644
--- a/src/llvmutil.cpp
+++ b/src/llvmutil.cpp
@@ -47,6 +47,7 @@
 #include <llvm/IR/BasicBlock.h>
 #include <llvm/IR/Instructions.h>
 #include <llvm/IR/Module.h>
+#include <llvm/Support/raw_ostream.h>
 
 #ifdef ISPC_GENX_ENABLED
 #include <llvm/GenXIntrinsics/GenXIntrinsics.h>
@@ -1432,7 +1433,7 @@ static void lDumpValue(llvm::Value *v, std::set<llvm::Value *> &done) {
         return;
 
     fprintf(stderr, "  ");
-    v->dump();
+    v->print(llvm::outs(), false);
     done.insert(v);
 
     if (inst == NULL)
diff --git a/src/opt.cpp b/src/opt.cpp
index 4ad8c5d1..32da76ca 100644
--- a/src/opt.cpp
+++ b/src/opt.cpp
@@ -157,7 +157,7 @@ static llvm::Pass *CreateMangleOpenCLBuiltins();
                                                                        getenv("FUNC"), strlen(getenv("FUNC")))))) {    \
         fprintf(stderr, "Start of " NAME "\n");                                                                        \
         fprintf(stderr, "---------------\n");                                                                          \
-        bb.dump();                                                                                                     \
+        bb.print(llvm::outs(), false);                                                                               \
         fprintf(stderr, "---------------\n\n");                                                                        \
     } else /* eat semicolon */
 
@@ -167,7 +167,7 @@ static llvm::Pass *CreateMangleOpenCLBuiltins();
                                                                        getenv("FUNC"), strlen(getenv("FUNC")))))) {    \
         fprintf(stderr, "End of " NAME " %s\n", modifiedAny ? "** CHANGES **" : "");                                   \
         fprintf(stderr, "---------------\n");                                                                          \
-        bb.dump();                                                                                                     \
+        bb.print(llvm::outs(), false);                                                                               \
         fprintf(stderr, "---------------\n\n");                                                                        \
     } else /* eat semicolon */
 #else
@@ -469,7 +469,7 @@ void Optimize(llvm::Module *module, int optLevel) {
 #ifndef ISPC_NO_DUMPS
     if (g->debugPrint) {
         printf("*** Code going into optimization ***\n");
-        module->dump();
+        module->print(llvm::outs(), nullptr);
     }
 #endif
     DebugPassManager optPM;
@@ -831,7 +831,7 @@ void Optimize(llvm::Module *module, int optLevel) {
 #ifndef ISPC_NO_DUMPS
     if (g->debugPrint) {
         printf("\n*****\nFINAL OUTPUT\n*****\n");
-        module->dump();
+        module->print(llvm::outs(), nullptr);
     }
 #endif
 }
@@ -4633,7 +4633,7 @@ char DebugPass::ID = 0;
 bool DebugPass::runOnModule(llvm::Module &module) {
     fprintf(stderr, "%s", str_output);
     fflush(stderr);
-    module.dump();
+    module.print(llvm::outs(), nullptr);
     return true;
 }
 
@@ -4680,7 +4680,7 @@ void DebugPassFile::run(llvm::Module &module, bool init) {
     snprintf(fname, sizeof(fname), "%s_%d_%s.ll", init ? "init" : "ir", pnum, sanitize(std::string(pname)).c_str());
     llvm::raw_fd_ostream OS(fname, EC, llvm::sys::fs::F_None);
     Assert(!EC && "IR dump file creation failed!");
-    module.print(OS, 0);
+    module.print(OS, nullptr);
 }
 
 bool DebugPassFile::runOnModule(llvm::Module &module) {
-- 
2.30.0

